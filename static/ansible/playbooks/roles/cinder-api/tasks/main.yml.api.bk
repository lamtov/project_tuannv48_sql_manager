- block:
  - name: 1.pull docker-registry:4000/cinder:q
    debug: msg='Starting 1-------------------------------------------->'
  - include: extends/before.yml task_index=1
  - command: '{{ item }}'
    with_items:
    - docker pull '{{ docker_image.cinder_api }}'
    - docker pull '{{ docker_image.cinder_scheduler }}'
    register: infos
  - include: extends/after_ok.yml task_index=1 info={{ infos  }}
  rescue:
  - include: extends/after_failse.yml task_index=1 info={{ infos  }}
  - fail: msg={{ infos  }}
  tags:
  - install
  - '1'
- block:
  - name: 2.mkdir '{{ usr_share_docker }}/cinder'
    debug: msg='Starting 2-------------------------------------------->'
  - include: extends/before.yml task_index=2
  - file:
      path: '{{ item }}'
      state: directory
      owner: root
      group: root
      mode: 509
      recurse: no
    with_items:
    - '{{ usr_share_docker }}/cinder/cinder'
    - '{{ usr_share_docker }}/cinder/backup'
    - '{{ usr_share_docker }}/cinder/ceph'
    register: infos
  - include: extends/after_ok.yml task_index=2 info={{ infos  }}
  rescue:
  - include: extends/after_failse.yml task_index=2 info={{ infos  }}
  - fail: msg={{ infos  }}
  tags:
  - install
  - '2'
- block:
  - name: 3.cp cinder.sql
    debug: msg='Starting 3-------------------------------------------->'
  - include: extends/before.yml task_index=3
  - template:
      src: cinder.sql.j2
      dest: '{{ usr_share_docker }}/cinder/cinder/cinder.sql'
      owner: root
      group: root
      mode: '0644'
      backup: yes
    register: infos
  - include: extends/after_ok.yml task_index=3 info={{ infos  }}
  rescue:
  - include: extends/after_failse.yml task_index=3 info={{ infos  }}
  - fail: msg={{ infos  }}
  tags:
  - install
  - '3'
- block:
  - name: 4.Create Cinder Database
    debug: msg='Starting 4-------------------------------------------->'
  - include: extends/before.yml task_index=4
  - shell: mysql < '{{ usr_share_docker }}/cinder/cinder/cinder.sql'
    when: ( "{{ host_name }}" == "{{ first_controller }}" )
    ignore_errors: yes
    register: infos
  - include: extends/after_ok.yml task_index=4 info={{ infos  }}
  rescue:
  - include: extends/after_failse.yml task_index=4 info={{ infos  }}
  - fail: msg={{ infos  }}
  tags:
  - install
  - '4'
- block:
  - name: 5.Create Cinder user
    debug: msg='Starting 5-------------------------------------------->'
  - include: extends/before.yml task_index=5
  - shell: '{{ item }}'
    with_items:
    - source ~/open.rc && openstack user create --domain default --password {{ OPS_CINDER_PASS
      }} {{ ops_user_cinder }}
    - source ~/open.rc && openstack role add --project service --user {{ ops_user_cinder
      }} admin
    when: ( "{{ host_name }}" == "{{ first_controller }}" )
    register: infos
  - include: extends/after_ok.yml task_index=5 info={{ infos  }}
  rescue:
  - include: extends/after_failse.yml task_index=5 info={{ infos  }}
  - fail: msg={{ infos  }}
  tags:
  - install
  - '5'
- block:
  - name: 6.Create Cinder Service
    debug: msg='Starting 6-------------------------------------------->'
  - include: extends/before.yml task_index=6
  - shell: '{{ item }}'
    with_items:
    - source ~/open.rc && openstack service create --name cinderv2 --description "OpenStack
      Block Storage" volumev2
    - source ~/open.rc && openstack service create --name cinderv3 --description "OpenStack
      Block Storage" volumev3
    - source ~/open.rc && openstack endpoint create --region {{ REGION_NAME }}  volumev2
      public http://{{ CONTROLLER_HOST }}:{{ services_port.cinder_api }}/v2/%\(project_id\)s
    - source ~/open.rc && openstack endpoint create --region {{ REGION_NAME }}  volumev2
      admin  http://{{ CONTROLLER_HOST }}:{{ services_port.cinder_api }}/v2/%\(project_id\)s
    - source ~/open.rc && openstack endpoint create --region {{ REGION_NAME }}  volumev2
      internal  http://{{ CONTROLLER_HOST }}:{{ services_port.cinder_api }}/v2/%\(project_id\)s
    - source ~/open.rc && openstack endpoint create --region {{ REGION_NAME }}  volumev3
      public http://{{ CONTROLLER_HOST }}:{{ services_port.cinder_api }}/v3/%\(project_id\)s
    - source ~/open.rc && openstack endpoint create --region {{ REGION_NAME }}  volumev3
      admin  http://{{ CONTROLLER_HOST }}:{{ services_port.cinder_api }}/v3/%\(project_id\)s
    - source ~/open.rc && openstack endpoint create --region {{ REGION_NAME }}  volumev3
      internal  http://{{ CONTROLLER_HOST }}:{{ services_port.cinder_api }}/v3/%\(project_id\)s
    when: ( "{{ host_name }}" == "{{ first_controller }}" )
    register: infos
  - include: extends/after_ok.yml task_index=6 info={{ infos  }}
  rescue:
  - include: extends/after_failse.yml task_index=6 info={{ infos  }}
  - fail: msg={{ infos  }}
  tags:
  - install
  - '6'
- block:
  - name: 7.cp /usr/share/docker/cinder/cinder/
    debug: msg='Starting 7-------------------------------------------->'
  - include: extends/before.yml task_index=7
  - template:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
      owner: root
      group: root
      mode: '0644'
      backup: yes
    with_items:
    - src: cinder.conf.j2
      dest: '{{ usr_share_docker }}/cinder/cinder/cinder.conf'
    register: infos
  - include: extends/after_ok.yml task_index=7 info={{ infos  }}
  rescue:
  - include: extends/after_failse.yml task_index=7 info={{ infos  }}
  - fail: msg={{ infos  }}
  tags:
  - install
  - '7'
- block:
  - name: 8.cp /usr/share/docker/cinder/ceph/
    debug: msg='Starting 8-------------------------------------------->'
  - include: extends/before.yml task_index=8
  - template:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
      owner: root
      group: root
      mode: '0644'
      backup: yes
    with_items:
    - src: ceph.conf.j2
      dest: '{{ usr_share_docker }}/cinder/ceph/ceph.conf'
    - src: ceph.client.volumes.keyring.j2
      dest: '{{ usr_share_docker }}/cinder/ceph/ceph.client.volumes.keyring'
    register: infos
  - include: extends/after_ok.yml task_index=8 info={{ infos  }}
  rescue:
  - include: extends/after_failse.yml task_index=8 info={{ infos  }}
  - fail: msg={{ infos  }}
  tags:
  - install
  - '8'
- block:
  - name: 9.Cinder Bootstrap
    debug: msg='Starting 9-------------------------------------------->'
  - include: extends/before.yml task_index=9
  - docker_container:
      name: '{{ item.name }}'
      image: '{{ item.image }}'
      network_mode: host
      user: '{{ item.user }}'
      volumes: '{{ item.volumes }}'
      env: '{{ item.env }}'
    with_items: '{{docker_bootstrap}}'
    when: ( "{{ host_name }}" == "{{ first_controller }}" )
    register: infos
  - include: extends/after_ok.yml task_index=9 info={{ infos  }}
  rescue:
  - include: extends/after_failse.yml task_index=9 info={{ infos  }}
  - fail: msg={{ infos  }}
  tags:
  - install
  - '9'
- block:
  - name: 10.Pause 25 Seconds
    debug: msg='Starting 10-------------------------------------------->'
  - include: extends/before.yml task_index=10
  - pause:
      seconds: 25
    when: ( "{{ host_name }}" == "{{ first_controller }}" )
    register: infos
  - include: extends/after_ok.yml task_index=10 info={{ infos  }}
  rescue:
  - include: extends/after_failse.yml task_index=10 info={{ infos  }}
  - fail: msg={{ infos  }}
  tags:
  - install
  - '10'
- block:
  - name: 11.Cerate Cinder Container
    debug: msg='Starting 11-------------------------------------------->'
  - include: extends/before.yml task_index=11
  - docker_container:
      name: '{{ item.name }}'
      image: '{{ item.image }}'
      network_mode: host
      user: '{{ item.user }}'
      volumes: '{{ item.volumes }}'
      restart_policy: '{{ item.restart_policy }}'
      env: '{{ item.env }}'
    with_items: '{{containers}}'
    register: infos
  - include: extends/after_ok.yml task_index=11 info={{ infos  }}
  rescue:
  - include: extends/after_failse.yml task_index=11 info={{ infos  }}
  - fail: msg={{ infos  }}
  tags:
  - install
  - '11'
